# Generated by Django 5.0.1 on 2025-10-18 18:43

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='URLToScrape',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(max_length=1000, unique=True, validators=[django.core.validators.URLValidator()])),
                ('site_name', models.CharField(help_text='Nombre del sitio (ej: Portal Inmobiliario)', max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('priority', models.CharField(choices=[('low', 'Baja'), ('medium', 'Media'), ('high', 'Alta')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('in_progress', 'En Progreso'), ('completed', 'Completado'), ('failed', 'Fallido'), ('disabled', 'Deshabilitado')], default='pending', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('scrape_frequency_hours', models.IntegerField(default=24, help_text='Frecuencia de scraping en horas')),
                ('last_scraped_at', models.DateTimeField(blank=True, null=True)),
                ('next_scrape_at', models.DateTimeField(blank=True, null=True)),
                ('total_scrapes', models.IntegerField(default=0)),
                ('successful_scrapes', models.IntegerField(default=0)),
                ('failed_scrapes', models.IntegerField(default=0)),
                ('last_error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'URL a Scrapear',
                'verbose_name_plural': 'URLs a Scrapear',
                'db_table': 'urls_to_scrape',
                'ordering': ['-priority', '-created_at'],
                'indexes': [models.Index(fields=['status', 'is_active'], name='urls_to_scr_status_f74c4c_idx'), models.Index(fields=['next_scrape_at'], name='urls_to_scr_next_sc_95e9ad_idx')],
            },
        ),
        migrations.CreateModel(
            name='Terreno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=500)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('precio_uf', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tipo_operacion', models.CharField(choices=[('venta', 'Venta'), ('arriendo', 'Arriendo'), ('venta_arriendo', 'Venta y Arriendo')], default='venta', max_length=20)),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('reservado', 'Reservado'), ('vendido', 'Vendido'), ('arrendado', 'Arrendado')], default='disponible', max_length=20)),
                ('metros_cuadrados', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('metros_terreno', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('dormitorios', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('banos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('estacionamientos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('direccion', models.CharField(max_length=500)),
                ('comuna', models.CharField(max_length=100)),
                ('ciudad', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=20, null=True)),
                ('latitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('ano_construccion', models.IntegerField(blank=True, null=True)),
                ('piso', models.IntegerField(blank=True, null=True)),
                ('orientacion', models.CharField(blank=True, max_length=50, null=True)),
                ('gastos_comunes', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('contribuciones', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amenidades', models.JSONField(blank=True, default=list)),
                ('url_fuente', models.URLField(max_length=1000)),
                ('sitio_origen', models.CharField(max_length=200)),
                ('codigo_propiedad', models.CharField(blank=True, max_length=200, null=True)),
                ('imagenes_urls', models.JSONField(blank=True, default=list)),
                ('nombre_contacto', models.CharField(blank=True, max_length=200, null=True)),
                ('telefono_contacto', models.CharField(blank=True, max_length=50, null=True)),
                ('email_contacto', models.EmailField(blank=True, max_length=254, null=True)),
                ('inmobiliaria', models.CharField(blank=True, max_length=200, null=True)),
                ('fecha_publicacion', models.DateField(blank=True, null=True)),
                ('fecha_scraping', models.DateTimeField(auto_now_add=True)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tipo_terreno', models.CharField(choices=[('urbano', 'Urbano'), ('rural', 'Rural'), ('industrial', 'Industrial'), ('comercial', 'Comercial')], default='urbano', max_length=20)),
                ('forma_terreno', models.CharField(blank=True, choices=[('regular', 'Regular'), ('irregular', 'Irregular')], max_length=20, null=True)),
                ('frente_metros', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('fondo_metros', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('tiene_agua', models.BooleanField(default=False)),
                ('tiene_luz', models.BooleanField(default=False)),
                ('tiene_alcantarillado', models.BooleanField(default=False)),
                ('tiene_gas', models.BooleanField(default=False)),
                ('es_esquina', models.BooleanField(default=False)),
                ('tiene_cerco', models.BooleanField(default=False)),
                ('uso_suelo', models.CharField(blank=True, max_length=200, null=True)),
                ('url_scrape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_propiedades', to='scraping.urltoscrape')),
            ],
            options={
                'verbose_name': 'Terreno',
                'verbose_name_plural': 'Terrenos',
                'db_table': 'terrenos',
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=500)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('precio_uf', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tipo_operacion', models.CharField(choices=[('venta', 'Venta'), ('arriendo', 'Arriendo'), ('venta_arriendo', 'Venta y Arriendo')], default='venta', max_length=20)),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('reservado', 'Reservado'), ('vendido', 'Vendido'), ('arrendado', 'Arrendado')], default='disponible', max_length=20)),
                ('metros_cuadrados', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('metros_terreno', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('dormitorios', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('banos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('estacionamientos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('direccion', models.CharField(max_length=500)),
                ('comuna', models.CharField(max_length=100)),
                ('ciudad', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=20, null=True)),
                ('latitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('ano_construccion', models.IntegerField(blank=True, null=True)),
                ('piso', models.IntegerField(blank=True, null=True)),
                ('orientacion', models.CharField(blank=True, max_length=50, null=True)),
                ('gastos_comunes', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('contribuciones', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amenidades', models.JSONField(blank=True, default=list)),
                ('url_fuente', models.URLField(max_length=1000)),
                ('sitio_origen', models.CharField(max_length=200)),
                ('codigo_propiedad', models.CharField(blank=True, max_length=200, null=True)),
                ('imagenes_urls', models.JSONField(blank=True, default=list)),
                ('nombre_contacto', models.CharField(blank=True, max_length=200, null=True)),
                ('telefono_contacto', models.CharField(blank=True, max_length=50, null=True)),
                ('email_contacto', models.EmailField(blank=True, max_length=254, null=True)),
                ('inmobiliaria', models.CharField(blank=True, max_length=200, null=True)),
                ('fecha_publicacion', models.DateField(blank=True, null=True)),
                ('fecha_scraping', models.DateTimeField(auto_now_add=True)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tiene_balcon', models.BooleanField(default=False)),
                ('tiene_terraza', models.BooleanField(default=False)),
                ('metros_balcon', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('amoblado', models.BooleanField(default=False)),
                ('acepta_mascotas', models.BooleanField(default=False)),
                ('total_pisos_edificio', models.IntegerField(blank=True, null=True)),
                ('tiene_porteria', models.BooleanField(default=False)),
                ('tiene_ascensor', models.BooleanField(default=False)),
                ('tiene_bodega', models.BooleanField(default=False)),
                ('url_scrape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_propiedades', to='scraping.urltoscrape')),
            ],
            options={
                'verbose_name': 'Departamento',
                'verbose_name_plural': 'Departamentos',
                'db_table': 'departamentos',
            },
        ),
        migrations.CreateModel(
            name='CasaPrefabricada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=500)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('precio_uf', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tipo_operacion', models.CharField(choices=[('venta', 'Venta'), ('arriendo', 'Arriendo'), ('venta_arriendo', 'Venta y Arriendo')], default='venta', max_length=20)),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('reservado', 'Reservado'), ('vendido', 'Vendido'), ('arrendado', 'Arrendado')], default='disponible', max_length=20)),
                ('metros_cuadrados', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('metros_terreno', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('dormitorios', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('banos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('estacionamientos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('direccion', models.CharField(max_length=500)),
                ('comuna', models.CharField(max_length=100)),
                ('ciudad', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=20, null=True)),
                ('latitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('ano_construccion', models.IntegerField(blank=True, null=True)),
                ('piso', models.IntegerField(blank=True, null=True)),
                ('orientacion', models.CharField(blank=True, max_length=50, null=True)),
                ('gastos_comunes', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('contribuciones', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amenidades', models.JSONField(blank=True, default=list)),
                ('url_fuente', models.URLField(max_length=1000)),
                ('sitio_origen', models.CharField(max_length=200)),
                ('codigo_propiedad', models.CharField(blank=True, max_length=200, null=True)),
                ('imagenes_urls', models.JSONField(blank=True, default=list)),
                ('nombre_contacto', models.CharField(blank=True, max_length=200, null=True)),
                ('telefono_contacto', models.CharField(blank=True, max_length=50, null=True)),
                ('email_contacto', models.EmailField(blank=True, max_length=254, null=True)),
                ('inmobiliaria', models.CharField(blank=True, max_length=200, null=True)),
                ('fecha_publicacion', models.DateField(blank=True, null=True)),
                ('fecha_scraping', models.DateTimeField(auto_now_add=True)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tipo_prefabricada', models.CharField(choices=[('modular', 'Modular'), ('container', 'Container'), ('movil', 'Móvil'), ('tiny_house', 'Tiny House')], default='modular', max_length=20)),
                ('material_principal', models.CharField(choices=[('madera', 'Madera'), ('acero', 'Acero'), ('concreto', 'Concreto'), ('mixto', 'Mixto')], default='madera', max_length=20)),
                ('es_transportable', models.BooleanField(default=True)),
                ('requiere_terreno', models.BooleanField(default=True)),
                ('tiempo_instalacion_dias', models.IntegerField(blank=True, null=True)),
                ('incluye_instalacion', models.BooleanField(default=False)),
                ('garantia_anos', models.IntegerField(blank=True, null=True)),
                ('certificacion_energetica', models.CharField(blank=True, max_length=10, null=True)),
                ('numero_modulos', models.IntegerField(default=1)),
                ('es_expandible', models.BooleanField(default=False)),
                ('url_scrape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_propiedades', to='scraping.urltoscrape')),
            ],
            options={
                'verbose_name': 'Casa Prefabricada',
                'verbose_name_plural': 'Casas Prefabricadas',
                'db_table': 'casas_prefabricadas',
            },
        ),
        migrations.CreateModel(
            name='Casa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=500)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('precio_uf', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tipo_operacion', models.CharField(choices=[('venta', 'Venta'), ('arriendo', 'Arriendo'), ('venta_arriendo', 'Venta y Arriendo')], default='venta', max_length=20)),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('reservado', 'Reservado'), ('vendido', 'Vendido'), ('arrendado', 'Arrendado')], default='disponible', max_length=20)),
                ('metros_cuadrados', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('metros_terreno', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('dormitorios', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('banos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('estacionamientos', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('direccion', models.CharField(max_length=500)),
                ('comuna', models.CharField(max_length=100)),
                ('ciudad', models.CharField(max_length=100)),
                ('region', models.CharField(max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=20, null=True)),
                ('latitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitud', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('ano_construccion', models.IntegerField(blank=True, null=True)),
                ('piso', models.IntegerField(blank=True, null=True)),
                ('orientacion', models.CharField(blank=True, max_length=50, null=True)),
                ('gastos_comunes', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('contribuciones', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('amenidades', models.JSONField(blank=True, default=list)),
                ('url_fuente', models.URLField(max_length=1000)),
                ('sitio_origen', models.CharField(max_length=200)),
                ('codigo_propiedad', models.CharField(blank=True, max_length=200, null=True)),
                ('imagenes_urls', models.JSONField(blank=True, default=list)),
                ('nombre_contacto', models.CharField(blank=True, max_length=200, null=True)),
                ('telefono_contacto', models.CharField(blank=True, max_length=50, null=True)),
                ('email_contacto', models.EmailField(blank=True, max_length=254, null=True)),
                ('inmobiliaria', models.CharField(blank=True, max_length=200, null=True)),
                ('fecha_publicacion', models.DateField(blank=True, null=True)),
                ('fecha_scraping', models.DateTimeField(auto_now_add=True)),
                ('ultima_actualizacion', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tipo_casa', models.CharField(choices=[('pareada', 'Pareada'), ('independiente', 'Independiente'), ('condominio', 'Condominio'), ('villa', 'Villa')], default='independiente', max_length=20)),
                ('tiene_patio', models.BooleanField(default=False)),
                ('metros_patio', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('tiene_quincho', models.BooleanField(default=False)),
                ('tiene_piscina', models.BooleanField(default=False)),
                ('numero_pisos', models.IntegerField(default=1)),
                ('tiene_bodega', models.BooleanField(default=False)),
                ('url_scrape', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_propiedades', to='scraping.urltoscrape')),
            ],
            options={
                'verbose_name': 'Casa',
                'verbose_name_plural': 'Casas',
                'db_table': 'casas',
            },
        ),
        migrations.CreateModel(
            name='ScrapingLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('started', 'Iniciado'), ('completed', 'Completado'), ('failed', 'Fallido'), ('partial', 'Parcial')], max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('properties_found', models.IntegerField(default=0)),
                ('properties_created', models.IntegerField(default=0)),
                ('properties_updated', models.IntegerField(default=0)),
                ('properties_failed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('execution_time_seconds', models.FloatField(blank=True, null=True)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('url_scrape', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scraping_logs', to='scraping.urltoscrape')),
            ],
            options={
                'verbose_name': 'Log de Scraping',
                'verbose_name_plural': 'Logs de Scraping',
                'db_table': 'scraping_logs',
                'ordering': ['-started_at'],
                'indexes': [models.Index(fields=['status', 'started_at'], name='scraping_lo_status_41db4d_idx')],
            },
        ),
    ]
